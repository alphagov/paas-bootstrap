---
meta:
  stemcell:
    name: bosh-aws-xen-hvm-ubuntu-xenial-go_agent
    version: "456.14"

  zone: (( grab terraform_outputs_zone0 ))

name: concourse

# These versions and checksums are taken from the versions.yml file from the
# relevant tag of https://github.com/concourse/concourse-bosh-deployment
releases:
  - name: "concourse"
    version: "5.2.0"
    url: "https://bosh.io/d/github.com/concourse/concourse-bosh-release?v=5.2.0"
    sha1: "e7c813d35e70e1a3a5334b977136ba736fae05e1"
  - name: postgres
    version: 30
    url: https://bosh.io/d/github.com/cloudfoundry/postgres-release?v=30
    sha1: a798999d29b9f5aa12035cff907b26674b491200
  - name: "bpm"
    version: "1.1.1"
    url: "https://bosh.io/d/github.com/cloudfoundry/bpm-release?v=1.1.1"
    sha1: "a7ea57aaf44a8217bae2a3df72a1afc51334e930"

properties:
  aws:
    credentials_source: env_or_profile
    region: (( grab terraform_outputs_region ))

resource_pools:
  - name: concourse
    network: concourse
    stemcell:
      name: (( grab meta.stemcell.name ))
      version: (( grab meta.stemcell.version ))
    cloud_properties:
      instance_type: (( grab $CONCOURSE_INSTANCE_TYPE ))
      availability_zone: (( grab meta.zone ))
      iam_instance_profile: (( grab $CONCOURSE_INSTANCE_PROFILE ))
      elbs:
      - (( grab terraform_outputs_concourse_elb_name ))
      ephemeral_disk:
        size: 102400
        type: gp2
      security_groups:
      - (( grab terraform_outputs_bosh_managed_security_group ))
      - (( grab terraform_outputs_concourse_security_group ))
      - (( grab terraform_outputs_concourse_nocycle_security_group ))
      - (( grab terraform_outputs_ssh_security_group ))
      - (( grab terraform_outputs_bosh_api_client_security_group ))
      - (( grab terraform_outputs_bosh_ssh_client_security_group ))
    env:
      bosh:
        password: (( grab secrets.vcap_password ))
        ipv6:
          enable: true

  - name: concourse_worker
    network: concourse
    stemcell:
      name: (( grab meta.stemcell.name ))
      version: (( grab meta.stemcell.version ))
    cloud_properties:
      instance_type: (( grab $CONCOURSE_INSTANCE_TYPE ))
      availability_zone: (( grab meta.zone ))
      iam_instance_profile: (( grab $CONCOURSE_INSTANCE_PROFILE ))
      auto_assign_public_ip: true
      ephemeral_disk:
        size: 102400
        type: gp2
      security_groups:
      - (( grab terraform_outputs_bosh_managed_security_group ))
      - (( grab terraform_outputs_concourse_worker_security_group ))
      - (( grab terraform_outputs_ssh_security_group ))
      - (( grab terraform_outputs_bosh_api_client_security_group ))
      - (( grab terraform_outputs_bosh_ssh_client_security_group ))
    env:
      bosh:
        password: (( grab secrets.vcap_password ))
        ipv6:
          enable: true

disk_pools:
  - name: db
    disk_size: 20480
    cloud_properties:
      type: gp2

networks:
  - name: concourse
    type: manual
    subnets:
      - range: 10.0.0.0/24
        dns: [10.0.0.2]
        gateway: 10.0.0.1
        reserved:
        - 10.0.0.0 - 10.0.0.9
        static:
        - 10.0.0.10 - 10.0.0.20

        cloud_properties:
          subnet: (( grab terraform_outputs_subnet0_id ))
  - name: public
    type: vip

instance_groups:
  - name: concourse
    instances: 1
    resource_pool: concourse
    persistent_disk_pool: db

    jobs:
      - name: bpm
        release: bpm
        properties: {}

      - name: postgres
        release: postgres
        properties:
          databases:
            port: 5432
            databases:
              - name: atc
            roles:
              - name: atc
                password: (( grab secrets.concourse_postgres_password ))

      - name: web
        release: concourse
        properties:
          external_url: (( concat "https://" terraform_outputs_concourse_dns_name ))
          add_local_users:
            - (( concat "admin:" secrets.concourse_web_password ))
          auth_duration: (( grab $CONCOURSE_AUTH_DURATION ))
          main_team:
            auth:
              local:
                users:
                - admin
          postgresql:
            database: atc
            role:
              name: atc
              password: (( grab secrets.concourse_postgres_password ))
          token_signing_key: (( grab secrets.concourse_token_signing_key ))
          prometheus:
            bind_ip: 0.0.0.0
            bind_port: 9391
          worker_gateway:
            host_key: (( grab secrets.concourse_tsa_host_key ))
            authorized_keys: [(( grab secrets.concourse_worker_key.public_key ))]
          credhub:
            url: (( concat "https://bosh." $SYSTEM_DNS_ZONE_NAME ":8844/api" ))
            client_id: credhub-admin
            client_secret: (( grab secrets.bosh_credhub_admin_client_password ))
            tls:
              ca_cert:
                certificate: ((credhub_ca_cert))

      - name: worker
        release: concourse
        properties:
          worker_gateway:
            hosts: ["127.0.0.1:2222"]
            host_public_key: ((grab secrets.concourse_tsa_host_key.public_key))
            worker_key: ((grab secrets.concourse_worker_key))
          tags: [colocated-with-web]
          garden:
            allow_host_access: true

    networks:
      - name: public
        static_ips:
        - (( grab terraform_outputs_concourse_elastic_ip ))
      - name: concourse
        static_ips: (( static_ips(0) ))
        default: [dns, gateway]

  - name: concourse-worker
    instances: ((concourse_worker_instances))
    resource_pool: concourse_worker

    jobs:
      - name: bpm
        release: bpm
        properties: {}

      - name: worker
        release: concourse
        properties:
          worker_gateway:
            worker_key: ((grab secrets.concourse_worker_key))
            host_public_key: ((grab secrets.concourse_tsa_host_key.public_key))
          garden:
            allow_host_access: true

    networks:
      - name: concourse
        default: [dns, gateway]

compilation:
  workers: 1
  network: concourse
  reuse_compilation_vms: true
  cloud_properties:
    instance_type: c4.large
    availability_zone: (( grab meta.zone ))
    iam_instance_profile: compilation-vm
    auto_assign_public_ip: true

update:
  canaries: 1
  max_in_flight: 1
  canary_watch_time: 30000-600000
  update_watch_time: 5000-600000

tags:
  deploy_env: (( grab terraform_outputs_environment ))
